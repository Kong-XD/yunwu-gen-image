{
  "cwd": "/Users/didi/Desktop/yunwu-gen-image",
  "pkg": {
    "name": "yunwu-admin",
    "version": "1.0.0",
    "description": "后台管理系统",
    "scripts": {
      "dev": "umi dev",
      "build": "umi build",
      "start": "umi dev",
      "postinstall": "umi setup",
      "setup": "umi setup"
    },
    "dependencies": {
      "@ant-design/icons": "^4.8.0",
      "@ant-design/pro-layout": "^7.17.0",
      "@umijs/plugins": "^4.0.74",
      "antd": "^4.24.15",
      "papaparse": "^5.5.3",
      "react": "^18.2.0",
      "react-dom": "^18.2.0",
      "umi": "^4.0.74"
    },
    "devDependencies": {
      "@types/react": "^18.2.0",
      "@types/react-dom": "^18.2.0",
      "typescript": "^5.0.0"
    }
  },
  "pkgPath": "/Users/didi/Desktop/yunwu-gen-image/package.json",
  "plugins": {
    "./node_modules/@umijs/core/dist/service/servicePlugin": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "preset",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/core/dist/service/servicePlugin.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/core/dist/service/servicePlugin",
      "key": "servicePlugin"
    },
    "@umijs/preset-umi": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 3
      },
      "enableBy": "register",
      "type": "preset",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/index.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "@umijs/preset-umi",
      "key": "umi"
    },
    "./node_modules/@umijs/preset-umi/dist/registerMethods": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            1
          ]
        },
        "register": 3
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/registerMethods.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/registerMethods",
      "key": "registerMethods"
    },
    "@umijs/did-you-know": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            1
          ]
        },
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/did-you-know/dist/plugin.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "@umijs/did-you-know",
      "key": "umijsDidYouKnow"
    },
    "./node_modules/@umijs/preset-umi/dist/features/404/404": {
      "config": {},
      "time": {
        "hooks": {
          "modifyRoutes": [
            0
          ]
        },
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/404/404.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/404/404",
      "key": "404"
    },
    "./node_modules/@umijs/preset-umi/dist/features/aiDev/aiDev": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/aiDev/aiDev.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/aiDev/aiDev",
      "key": "aiDev"
    },
    "./node_modules/@umijs/preset-umi/dist/features/appData/appData": {
      "config": {},
      "time": {
        "hooks": {
          "modifyAppData": [
            7
          ]
        },
        "register": 13
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/appData/appData.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/appData/appData",
      "key": "appData"
    },
    "./node_modules/@umijs/preset-umi/dist/features/appData/umiInfo": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/appData/umiInfo.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/appData/umiInfo",
      "key": "umiInfo"
    },
    "./node_modules/@umijs/preset-umi/dist/features/check/check": {
      "config": {},
      "time": {
        "hooks": {
          "onCheckConfig": [
            0
          ],
          "onCheck": [
            0
          ]
        },
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/check/check.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/check/check",
      "key": "check"
    },
    "./node_modules/@umijs/preset-umi/dist/features/check/babel722": {
      "config": {},
      "time": {
        "hooks": {
          "onCheck": [
            0
          ]
        },
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/check/babel722.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/check/babel722",
      "key": "babel722"
    },
    "./node_modules/@umijs/preset-umi/dist/features/codeSplitting/codeSplitting": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/codeSplitting/codeSplitting.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/codeSplitting/codeSplitting",
      "key": "codeSplitting"
    },
    "./node_modules/@umijs/preset-umi/dist/features/configPlugins/configPlugins": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ]
        },
        "register": 6
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/configPlugins/configPlugins.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/configPlugins/configPlugins",
      "key": "configPlugins"
    },
    "virtual: config-title": {
      "id": "virtual: config-title",
      "key": "title",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-styles": {
      "id": "virtual: config-styles",
      "key": "styles",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-scripts": {
      "id": "virtual: config-scripts",
      "key": "scripts",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-routes": {
      "id": "virtual: config-routes",
      "key": "routes",
      "config": {
        "onChange": "regenerateTmpFiles"
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-routeLoader": {
      "id": "virtual: config-routeLoader",
      "key": "routeLoader",
      "config": {
        "default": {
          "moduleType": "esm"
        }
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-reactRouter5Compat": {
      "id": "virtual: config-reactRouter5Compat",
      "key": "reactRouter5Compat",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-presets": {
      "id": "virtual: config-presets",
      "key": "presets",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-plugins": {
      "id": "virtual: config-plugins",
      "key": "plugins",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-npmClient": {
      "id": "virtual: config-npmClient",
      "key": "npmClient",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-mountElementId": {
      "id": "virtual: config-mountElementId",
      "key": "mountElementId",
      "config": {
        "default": "root"
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-metas": {
      "id": "virtual: config-metas",
      "key": "metas",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-links": {
      "id": "virtual: config-links",
      "key": "links",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-historyWithQuery": {
      "id": "virtual: config-historyWithQuery",
      "key": "historyWithQuery",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-history": {
      "id": "virtual: config-history",
      "key": "history",
      "config": {
        "default": {
          "type": "browser"
        }
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-headScripts": {
      "id": "virtual: config-headScripts",
      "key": "headScripts",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-esbuildMinifyIIFE": {
      "id": "virtual: config-esbuildMinifyIIFE",
      "key": "esbuildMinifyIIFE",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-conventionRoutes": {
      "id": "virtual: config-conventionRoutes",
      "key": "conventionRoutes",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-conventionLayout": {
      "id": "virtual: config-conventionLayout",
      "key": "conventionLayout",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-base": {
      "id": "virtual: config-base",
      "key": "base",
      "config": {
        "default": "/"
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-analyze": {
      "id": "virtual: config-analyze",
      "key": "analyze",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-writeToDisk": {
      "id": "virtual: config-writeToDisk",
      "key": "writeToDisk",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-transformRuntime": {
      "id": "virtual: config-transformRuntime",
      "key": "transformRuntime",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-theme": {
      "id": "virtual: config-theme",
      "key": "theme",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-targets": {
      "id": "virtual: config-targets",
      "key": "targets",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-svgr": {
      "id": "virtual: config-svgr",
      "key": "svgr",
      "config": {
        "default": {}
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-svgo": {
      "id": "virtual: config-svgo",
      "key": "svgo",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-stylusLoader": {
      "id": "virtual: config-stylusLoader",
      "key": "stylusLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-styleLoader": {
      "id": "virtual: config-styleLoader",
      "key": "styleLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-srcTranspilerOptions": {
      "id": "virtual: config-srcTranspilerOptions",
      "key": "srcTranspilerOptions",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-srcTranspiler": {
      "id": "virtual: config-srcTranspiler",
      "key": "srcTranspiler",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-sassLoader": {
      "id": "virtual: config-sassLoader",
      "key": "sassLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-runtimePublicPath": {
      "id": "virtual: config-runtimePublicPath",
      "key": "runtimePublicPath",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-purgeCSS": {
      "id": "virtual: config-purgeCSS",
      "key": "purgeCSS",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-publicPath": {
      "id": "virtual: config-publicPath",
      "key": "publicPath",
      "config": {
        "default": "/"
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-proxy": {
      "id": "virtual: config-proxy",
      "key": "proxy",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-postcssLoader": {
      "id": "virtual: config-postcssLoader",
      "key": "postcssLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-outputPath": {
      "id": "virtual: config-outputPath",
      "key": "outputPath",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-normalCSSLoaderModules": {
      "id": "virtual: config-normalCSSLoaderModules",
      "key": "normalCSSLoaderModules",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-mfsu": {
      "id": "virtual: config-mfsu",
      "key": "mfsu",
      "config": {
        "default": {
          "strategy": "eager"
        }
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-mdx": {
      "id": "virtual: config-mdx",
      "key": "mdx",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-manifest": {
      "id": "virtual: config-manifest",
      "key": "manifest",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-lessLoader": {
      "id": "virtual: config-lessLoader",
      "key": "lessLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-jsMinifierOptions": {
      "id": "virtual: config-jsMinifierOptions",
      "key": "jsMinifierOptions",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-jsMinifier": {
      "id": "virtual: config-jsMinifier",
      "key": "jsMinifier",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-inlineLimit": {
      "id": "virtual: config-inlineLimit",
      "key": "inlineLimit",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-ignoreMomentLocale": {
      "id": "virtual: config-ignoreMomentLocale",
      "key": "ignoreMomentLocale",
      "config": {
        "default": true
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-https": {
      "id": "virtual: config-https",
      "key": "https",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-hash": {
      "id": "virtual: config-hash",
      "key": "hash",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-forkTSChecker": {
      "id": "virtual: config-forkTSChecker",
      "key": "forkTSChecker",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-fastRefresh": {
      "id": "virtual: config-fastRefresh",
      "key": "fastRefresh",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-extraPostCSSPlugins": {
      "id": "virtual: config-extraPostCSSPlugins",
      "key": "extraPostCSSPlugins",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-extraBabelPresets": {
      "id": "virtual: config-extraBabelPresets",
      "key": "extraBabelPresets",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-extraBabelPlugins": {
      "id": "virtual: config-extraBabelPlugins",
      "key": "extraBabelPlugins",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-extraBabelIncludes": {
      "id": "virtual: config-extraBabelIncludes",
      "key": "extraBabelIncludes",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-externals": {
      "id": "virtual: config-externals",
      "key": "externals",
      "config": {
        "default": {}
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-esm": {
      "id": "virtual: config-esm",
      "key": "esm",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-devtool": {
      "id": "virtual: config-devtool",
      "key": "devtool",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-depTranspiler": {
      "id": "virtual: config-depTranspiler",
      "key": "depTranspiler",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-define": {
      "id": "virtual: config-define",
      "key": "define",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-deadCode": {
      "id": "virtual: config-deadCode",
      "key": "deadCode",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssPublicPath": {
      "id": "virtual: config-cssPublicPath",
      "key": "cssPublicPath",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssMinifierOptions": {
      "id": "virtual: config-cssMinifierOptions",
      "key": "cssMinifierOptions",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssMinifier": {
      "id": "virtual: config-cssMinifier",
      "key": "cssMinifier",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssLoaderModules": {
      "id": "virtual: config-cssLoaderModules",
      "key": "cssLoaderModules",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssLoader": {
      "id": "virtual: config-cssLoader",
      "key": "cssLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-copy": {
      "id": "virtual: config-copy",
      "key": "copy",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-checkDepCssModules": {
      "id": "virtual: config-checkDepCssModules",
      "key": "checkDepCssModules",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-chainWebpack": {
      "id": "virtual: config-chainWebpack",
      "key": "chainWebpack",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cacheDirectoryPath": {
      "id": "virtual: config-cacheDirectoryPath",
      "key": "cacheDirectoryPath",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-babelLoaderCustomize": {
      "id": "virtual: config-babelLoaderCustomize",
      "key": "babelLoaderCustomize",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-autoprefixer": {
      "id": "virtual: config-autoprefixer",
      "key": "autoprefixer",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-autoCSSModules": {
      "id": "virtual: config-autoCSSModules",
      "key": "autoCSSModules",
      "config": {
        "default": true
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-alias": {
      "id": "virtual: config-alias",
      "key": "alias",
      "config": {
        "default": {
          "umi": "@@/exports",
          "react": "/Users/didi/Desktop/yunwu-gen-image/node_modules/react",
          "react-dom": "/Users/didi/Desktop/yunwu-gen-image/node_modules/react-dom",
          "react-router": "/Users/didi/Desktop/yunwu-gen-image/node_modules/react-router",
          "react-router-dom": "/Users/didi/Desktop/yunwu-gen-image/node_modules/react-router-dom"
        }
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "./node_modules/@umijs/preset-umi/dist/features/crossorigin/crossorigin": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/crossorigin/crossorigin.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/crossorigin/crossorigin",
      "key": "crossorigin"
    },
    "./node_modules/@umijs/preset-umi/dist/features/depsOnDemand/depsOnDemand": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            0
          ]
        },
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/depsOnDemand/depsOnDemand.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/depsOnDemand/depsOnDemand",
      "key": "depsOnDemand"
    },
    "./node_modules/@umijs/preset-umi/dist/features/devTool/devTool": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/devTool/devTool.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/devTool/devTool",
      "key": "devTool"
    },
    "./node_modules/@umijs/preset-umi/dist/features/esbuildHelperChecker/esbuildHelperChecker": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 46
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/esbuildHelperChecker/esbuildHelperChecker.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/esbuildHelperChecker/esbuildHelperChecker",
      "key": "esbuildHelperChecker"
    },
    "./node_modules/@umijs/preset-umi/dist/features/esmi/esmi": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 36
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/esmi/esmi.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/esmi/esmi",
      "key": "esmi"
    },
    "./node_modules/@umijs/preset-umi/dist/features/exportStatic/exportStatic": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 12
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/exportStatic/exportStatic.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/exportStatic/exportStatic",
      "key": "exportStatic"
    },
    "./node_modules/@umijs/preset-umi/dist/features/favicons/favicons": {
      "config": {},
      "time": {
        "hooks": {
          "modifyAppData": [
            0
          ]
        },
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/favicons/favicons.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/favicons/favicons",
      "key": "favicons"
    },
    "./node_modules/@umijs/preset-umi/dist/features/helmet/helmet": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/helmet/helmet.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/helmet/helmet",
      "key": "helmet"
    },
    "./node_modules/@umijs/preset-umi/dist/features/icons/icons": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/icons/icons.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/icons/icons",
      "key": "icons"
    },
    "./node_modules/@umijs/preset-umi/dist/features/mock/mock": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            1
          ]
        },
        "register": 19
      },
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/mock/mock.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/mock/mock",
      "key": "mock"
    },
    "./node_modules/@umijs/preset-umi/dist/features/mpa/mpa": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/mpa/mpa.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/mpa/mpa",
      "key": "mpa"
    },
    "./node_modules/@umijs/preset-umi/dist/features/okam/okam": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/okam/okam.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/okam/okam",
      "key": "okam"
    },
    "./node_modules/@umijs/preset-umi/dist/features/overrides/overrides": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/overrides/overrides.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/overrides/overrides",
      "key": "overrides"
    },
    "./node_modules/@umijs/preset-umi/dist/features/phantomDependency/phantomDependency": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/phantomDependency/phantomDependency.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/phantomDependency/phantomDependency",
      "key": "phantomDependency"
    },
    "./node_modules/@umijs/preset-umi/dist/features/polyfill/polyfill": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            1
          ]
        },
        "register": 1
      },
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/polyfill/polyfill.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/polyfill/polyfill",
      "key": "polyfill"
    },
    "./node_modules/@umijs/preset-umi/dist/features/polyfill/publicPathPolyfill": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/polyfill/publicPathPolyfill.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/polyfill/publicPathPolyfill",
      "key": "publicPathPolyfill"
    },
    "./node_modules/@umijs/preset-umi/dist/features/prepare/prepare": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/prepare/prepare.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/prepare/prepare",
      "key": "prepare"
    },
    "./node_modules/@umijs/preset-umi/dist/features/routePrefetch/routePrefetch": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/routePrefetch/routePrefetch.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/routePrefetch/routePrefetch",
      "key": "routePrefetch"
    },
    "./node_modules/@umijs/preset-umi/dist/features/stagewise/stagewise": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/stagewise/stagewise.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/stagewise/stagewise",
      "key": "stagewise"
    },
    "./node_modules/@umijs/preset-umi/dist/features/terminal/terminal": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/terminal/terminal.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/terminal/terminal",
      "key": "terminal"
    },
    "./node_modules/@umijs/preset-umi/dist/features/tmpFiles/tmpFiles": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 4
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/tmpFiles/tmpFiles.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/tmpFiles/tmpFiles",
      "key": "tmpFiles"
    },
    "./node_modules/@umijs/preset-umi/dist/features/clientLoader/clientLoader": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/clientLoader/clientLoader.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/clientLoader/clientLoader",
      "key": "clientLoader"
    },
    "./node_modules/@umijs/preset-umi/dist/features/routeProps/routeProps": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/routeProps/routeProps.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/routeProps/routeProps",
      "key": "routeProps"
    },
    "./node_modules/@umijs/preset-umi/dist/features/ssr/ssr": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/ssr/ssr.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/ssr/ssr",
      "key": "ssr"
    },
    "./node_modules/@umijs/preset-umi/dist/features/tmpFiles/configTypes": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/tmpFiles/configTypes.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/tmpFiles/configTypes",
      "key": "configTypes"
    },
    "./node_modules/@umijs/preset-umi/dist/features/transform/transform": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/transform/transform.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/transform/transform",
      "key": "transform"
    },
    "./node_modules/@umijs/preset-umi/dist/features/lowImport/lowImport": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/lowImport/lowImport.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/lowImport/lowImport",
      "key": "lowImport"
    },
    "./node_modules/@umijs/preset-umi/dist/features/vite/vite": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/vite/vite.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/vite/vite",
      "key": "vite"
    },
    "./node_modules/@umijs/preset-umi/dist/features/apiRoute/apiRoute": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 5
      },
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/apiRoute/apiRoute.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/apiRoute/apiRoute",
      "key": "apiRoute"
    },
    "./node_modules/@umijs/preset-umi/dist/features/monorepo/redirect": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 12
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/monorepo/redirect.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/monorepo/redirect",
      "key": "monorepoRedirect"
    },
    "./node_modules/@umijs/preset-umi/dist/features/test/test": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/test/test.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/test/test",
      "key": "test"
    },
    "./node_modules/@umijs/preset-umi/dist/features/clickToComponent/clickToComponent": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/clickToComponent/clickToComponent.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/clickToComponent/clickToComponent",
      "key": "clickToComponent"
    },
    "./node_modules/@umijs/preset-umi/dist/features/legacy/legacy": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/legacy/legacy.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/legacy/legacy",
      "key": "legacy"
    },
    "./node_modules/@umijs/preset-umi/dist/features/classPropertiesLoose/classPropertiesLoose": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/classPropertiesLoose/classPropertiesLoose.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/classPropertiesLoose/classPropertiesLoose",
      "key": "classPropertiesLoose"
    },
    "./node_modules/@umijs/preset-umi/dist/features/webpack/webpack": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/webpack/webpack.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/webpack/webpack",
      "key": "preset-umi:webpack"
    },
    "./node_modules/@umijs/preset-umi/dist/features/swc/swc": {
      "config": {},
      "time": {
        "hooks": {
          "addOnDemandDeps": [
            0
          ]
        },
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/swc/swc.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/swc/swc",
      "key": "swc"
    },
    "./node_modules/@umijs/preset-umi/dist/features/ui/ui": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/ui/ui.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/ui/ui",
      "key": "ui"
    },
    "./node_modules/@umijs/preset-umi/dist/features/mako/mako": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/mako/mako.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/mako/mako",
      "key": "mako"
    },
    "./node_modules/@umijs/preset-umi/dist/features/utoopack/utoopack": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/utoopack/utoopack.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/utoopack/utoopack",
      "key": "utoopack"
    },
    "./node_modules/@umijs/preset-umi/dist/features/hmrGuardian/hmrGuardian": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/hmrGuardian/hmrGuardian.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/hmrGuardian/hmrGuardian",
      "key": "hmrGuardian"
    },
    "./node_modules/@umijs/preset-umi/dist/features/routePreloadOnLoad/routePreloadOnLoad": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 15
      },
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/routePreloadOnLoad/routePreloadOnLoad.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/routePreloadOnLoad/routePreloadOnLoad",
      "key": "routePreloadOnLoad"
    },
    "./node_modules/@umijs/preset-umi/dist/features/forget/forget": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/forget/forget.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/forget/forget",
      "key": "forget"
    },
    "./node_modules/@umijs/preset-umi/dist/features/bundler/bundler": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/features/bundler/bundler.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/features/bundler/bundler",
      "key": "preset-umi:bundler"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/build": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 3
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/build.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/build",
      "key": "build"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/config/config": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 20
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/config/config.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/config/config",
      "key": "config"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/dev/dev": {
      "config": {},
      "time": {
        "hooks": {
          "modifyAppData": [
            7
          ]
        },
        "register": 30
      },
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/dev/dev.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/dev/dev",
      "key": "dev"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/help": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/help.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/help",
      "key": "help"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/lint": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/lint.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/lint",
      "key": "lint"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/setup": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/setup.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/setup",
      "key": "setup"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/deadcode": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/deadcode.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/deadcode",
      "key": "deadcode"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/version": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/version.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/version",
      "key": "version"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/page": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/generators/page.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/page",
      "key": "generator:page"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/prettier": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/generators/prettier.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/prettier",
      "key": "generator:prettier"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/tsconfig": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/generators/tsconfig.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/tsconfig",
      "key": "generator:tsconfig"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/jest": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/generators/jest.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/jest",
      "key": "generator:jest"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/tailwindcss": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/generators/tailwindcss.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/tailwindcss",
      "key": "generator:tailwindcss"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/dva": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/generators/dva.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/dva",
      "key": "generator:dva"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/component": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/generators/component.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/component",
      "key": "generator:component"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/mock": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/generators/mock.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/mock",
      "key": "generator:mock"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/cypress": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/generators/cypress.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/cypress",
      "key": "generator:cypress"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/api": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/generators/api.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/api",
      "key": "generator:api"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/precommit": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/generators/precommit.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/precommit",
      "key": "generator:precommit"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/plugin": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/plugin.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/plugin",
      "key": "command:plugin"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/verify-commit": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/verify-commit.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/verify-commit",
      "key": "verifyCommit"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/preview": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 11
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/preview.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/preview",
      "key": "preview"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/mfsu/mfsu": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/preset-umi/dist/commands/mfsu/mfsu.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/mfsu/mfsu",
      "key": "mfsu-cli"
    },
    "@umijs/plugin-run": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/plugin-run/dist/index.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "@umijs/plugin-run",
      "key": "run"
    },
    "./node_modules/@umijs/core/dist/service/generatePlugin": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/core/dist/service/generatePlugin.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/core/dist/service/generatePlugin",
      "key": "generatePlugin"
    },
    "./node_modules/@umijs/plugins/dist/antd": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ],
          "modifyAppData": [
            0
          ]
        },
        "register": 5
      },
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/plugins/dist/antd.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/plugins/dist/antd",
      "key": "antd"
    },
    "./node_modules/@umijs/plugins/dist/locale": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/@umijs/plugins/dist/locale.js",
      "cwd": "/Users/didi/Desktop/yunwu-gen-image",
      "id": "./node_modules/@umijs/plugins/dist/locale",
      "key": "locale"
    }
  },
  "presets": [],
  "name": "dev",
  "args": {
    "_": []
  },
  "userConfig": {
    "title": "云雾后台管理系统",
    "npmClient": "npm",
    "plugins": [
      "@umijs/plugins/dist/antd",
      "@umijs/plugins/dist/locale"
    ],
    "antd": {
      "style": "less"
    },
    "routes": [
      {
        "path": "/",
        "component": "@/layouts/BasicLayout",
        "routes": [
          {
            "path": "/",
            "redirect": "/dashboard"
          },
          {
            "path": "/dashboard",
            "name": "控制台",
            "icon": "DashboardOutlined",
            "component": "@/pages/Dashboard"
          },
          {
            "path": "/users",
            "name": "用户管理",
            "icon": "UserOutlined",
            "component": "@/pages/Users"
          },
          {
            "path": "/settings",
            "name": "系统设置",
            "icon": "SettingOutlined",
            "component": "@/pages/Settings"
          }
        ]
      }
    ],
    "proxy": {
      "/api": {
        "target": "http://localhost:8000",
        "changeOrigin": true,
        "pathRewrite": {
          "^/api": ""
        }
      }
    }
  },
  "mainConfigFile": "/Users/didi/Desktop/yunwu-gen-image/.umirc.ts",
  "config": {
    "routeLoader": {
      "moduleType": "esm"
    },
    "mountElementId": "root",
    "history": {
      "type": "browser"
    },
    "base": "/",
    "svgr": {},
    "publicPath": "/",
    "mfsu": {
      "strategy": "eager"
    },
    "ignoreMomentLocale": true,
    "externals": {},
    "autoCSSModules": true,
    "alias": {
      "umi": "@@/exports",
      "react": "/Users/didi/Desktop/yunwu-gen-image/node_modules/react",
      "react-dom": "/Users/didi/Desktop/yunwu-gen-image/node_modules/react-dom",
      "react-router": "/Users/didi/Desktop/yunwu-gen-image/node_modules/react-router",
      "react-router-dom": "/Users/didi/Desktop/yunwu-gen-image/node_modules/react-router-dom",
      "@": "/Users/didi/Desktop/yunwu-gen-image/src",
      "@@": "/Users/didi/Desktop/yunwu-gen-image/src/.umi",
      "regenerator-runtime": "/Users/didi/Desktop/yunwu-gen-image/node_modules/regenerator-runtime",
      "antd": "/Users/didi/Desktop/yunwu-gen-image/node_modules/antd"
    },
    "title": "云雾后台管理系统",
    "npmClient": "npm",
    "plugins": [
      "@umijs/plugins/dist/antd",
      "@umijs/plugins/dist/locale"
    ],
    "antd": {
      "style": "less"
    },
    "routes": [
      {
        "path": "/",
        "component": "@/layouts/BasicLayout",
        "routes": [
          {
            "path": "/",
            "redirect": "/dashboard"
          },
          {
            "path": "/dashboard",
            "name": "控制台",
            "icon": "DashboardOutlined",
            "component": "@/pages/Dashboard"
          },
          {
            "path": "/users",
            "name": "用户管理",
            "icon": "UserOutlined",
            "component": "@/pages/Users"
          },
          {
            "path": "/settings",
            "name": "系统设置",
            "icon": "SettingOutlined",
            "component": "@/pages/Settings"
          }
        ]
      }
    ],
    "proxy": {
      "/api": {
        "target": "http://localhost:8000",
        "changeOrigin": true,
        "pathRewrite": {
          "^/api": ""
        }
      }
    },
    "targets": {
      "chrome": 80
    },
    "theme": {
      "root-entry-name": "default"
    }
  },
  "routes": {
    "1": {
      "path": "/",
      "file": "@/layouts/BasicLayout.tsx",
      "id": "1",
      "absPath": "/",
      "__content": "import React from 'react';\nimport { Outlet } from 'umi';\nimport './BasicLayout.less';\n\nconst BasicLayout: React.FC = () => {\n  return (\n    <div className=\"basic-layout-fullscreen\">\n      <Outlet />\n    </div>\n  );\n};\n\nexport default BasicLayout;\n\n\n",
      "__isJSFile": true,
      "__absFile": "/Users/didi/Desktop/yunwu-gen-image/src/layouts/BasicLayout.tsx"
    },
    "2": {
      "path": "/",
      "redirect": "/dashboard",
      "parentId": "1",
      "id": "2",
      "absPath": "/"
    },
    "3": {
      "path": "/dashboard",
      "name": "控制台",
      "icon": "DashboardOutlined",
      "file": "@/pages/Dashboard/index.tsx",
      "parentId": "1",
      "id": "3",
      "absPath": "/dashboard",
      "__content": "import React, { useState } from 'react';\nimport { Card, Upload, Button, Input, Space, message, Image, Select } from 'antd';\nimport {\n  CloudUploadOutlined,\n  DeleteOutlined,\n  GlobalOutlined,\n  PlayCircleOutlined,\n  UploadOutlined,\n  BulbOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\n// @ts-ignore\nimport Papa from 'papaparse';\nimport './index.less';\n\nconst { TextArea } = Input;\n\nconst Dashboard: React.FC = () => {\n  const [fileList, setFileList] = useState<any[]>([]);\n  const [promptContent, setPromptContent] = useState('');\n  const [validShots, setValidShots] = useState<any[]>([]);\n  const [editingScene, setEditingScene] = useState<number | null>(null);\n  const [editingContent, setEditingContent] = useState<any>({});\n  const [apiKey, setApiKey] = useState<string>(() => {\n    // 从localStorage加载API密钥\n    return localStorage.getItem('apiKey') || '';\n  });\n  const [apiPlatform, setApiPlatform] = useState<string>(() => {\n    // 从localStorage加载API平台\n    return localStorage.getItem('apiPlatform') || '云雾';\n  });\n  const [model, setModel] = useState<string>(() => {\n    // 从localStorage加载模型\n    return localStorage.getItem('model') || 'Sora';\n  });\n  const [customStyle, setCustomStyle] = useState<string>('');\n  const [modelPrompt, setModelPrompt] = useState<string>('你是一个AI图像生成助手，根据用户的文字描述和参考图片生成一张高质量的图片。\\n\\n关键要求：你必须严格按照指定的宽高比生成图片。用户选择的宽高比是 Portrait（2:3）。\\n\\n这是强制性要求，必须严格遵守。不得生成其他宽高比的图片。\\n\\n宽高比是最重要的约束条件，必须严格执行。');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generatedImages, setGeneratedImages] = useState<any[]>([]);\n  const [generationProgress, setGenerationProgress] = useState<{[key: number]: string}>({});\n\n  // 处理API密钥变化\n  const handleApiKeyChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newApiKey = e.target.value;\n    setApiKey(newApiKey);\n    // 保存到localStorage\n    localStorage.setItem('apiKey', newApiKey);\n  };\n\n  // 处理API平台变化\n  const handleApiPlatformChange = (value: string) => {\n    setApiPlatform(value);\n    // 保存到localStorage\n    localStorage.setItem('apiPlatform', value);\n  };\n\n  // 处理模型变化\n  const handleModelChange = (value: string) => {\n    setModel(value);\n    // 保存到localStorage\n    localStorage.setItem('model', value);\n  };\n\n  // 处理模型基础Prompt变化\n  const handleModelPromptChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newModelPrompt = e.target.value;\n    setModelPrompt(newModelPrompt);\n  };\n\n  // 处理自定义风格变化\n  const handleCustomStyleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newCustomStyle = e.target.value;\n    setCustomStyle(newCustomStyle);\n  };\n\n  // 解析场景的提示词内容\n  const parseScenePrompt = (sceneData: any) => {\n    if (!sceneData) return null;\n    \n    const prompt = sceneData['分镜提示词'] || sceneData['提示词'] || sceneData['内容'] || sceneData['描述'] || '';\n    \n    // 尝试解析JSON格式的提示词\n    try {\n      const parsedPrompt = JSON.parse(prompt);\n      return parsedPrompt;\n    } catch (error) {\n      // 如果不是JSON格式，返回原始文本\n      return {\n        subject: {\n          characters: '',\n          expression: '',\n          action: prompt\n        },\n        environment: '',\n        time: '',\n        weather: '',\n        perspective: '',\n        shotType: ''\n      };\n    }\n  };\n\n  // 开始编辑场景\n  const startEditing = (sceneIndex: number) => {\n    const sceneData = validShots[sceneIndex];\n    const parsedPrompt = parseScenePrompt(sceneData);\n    setEditingScene(sceneIndex);\n    setEditingContent(parsedPrompt || {});\n  };\n\n  // 取消编辑\n  const cancelEditing = () => {\n    setEditingScene(null);\n    setEditingContent({});\n  };\n\n  // 保存编辑\n  const saveEditing = () => {\n    if (editingScene !== null) {\n      const updatedShots = [...validShots];\n      const promptText = JSON.stringify(editingContent);\n      updatedShots[editingScene] = {\n        ...updatedShots[editingScene],\n        '分镜提示词': promptText,\n        '提示词': promptText,\n        '内容': promptText,\n        '描述': promptText\n      };\n      setValidShots(updatedShots);\n      setEditingScene(null);\n      setEditingContent({});\n      message.success('场景内容已保存');\n    }\n  };\n\n  // 更新编辑内容\n  const updateEditingContent = (field: string, value: string) => {\n    setEditingContent((prev: any) => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // 更新主体内容\n  const updateSubjectContent = (field: string, value: string) => {\n    setEditingContent((prev: any) => ({\n      ...prev,\n      subject: {\n        ...prev.subject,\n        [field]: value\n      }\n    }));\n  };\n\n  // 参考图上传配置\n  const uploadProps = {\n    name: 'file',\n    accept: '.jpg,.jpeg,.png,.gif',\n    multiple: true,\n    fileList,\n    beforeUpload: (file: any) => {\n      const isImage = file.type.startsWith('image/');\n      if (!isImage) {\n        message.error('只能上传图片文件!');\n        return false;\n      }\n      const isLt10M = file.size / 1024 / 1024 < 10;\n      if (!isLt10M) {\n        message.error('图片大小不能超过 10MB!');\n        return false;\n      }\n      return false; // 阻止自动上传\n    },\n    onChange: (info: any) => {\n      setFileList(info.fileList.slice(-20)); // 最多20张\n    },\n    onDrop: (e: any) => {\n      console.log('Dropped files', e.dataTransfer.files);\n    },\n    onRemove: (file: any) => {\n      const newFileList = fileList.filter(item => item.uid !== file.uid);\n      setFileList(newFileList);\n    },\n  };\n\n\n  // 删除图片\n  const handleRemoveImage = (uid: string) => {\n    const newFileList = fileList.filter(item => item.uid !== uid);\n    setFileList(newFileList);\n  };\n\n  // 将图片文件转换为base64\n  const convertImageToBase64 = (file: any): Promise<string> => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const base64 = reader.result as string;\n        // 移除data:image/xxx;base64,前缀，只保留base64数据\n        const base64Data = base64.split(',')[1];\n        resolve(base64Data);\n      };\n      reader.onerror = reject;\n      reader.readAsDataURL(file.originFileObj || file);\n    });\n  };\n\n  // 下载图片到本地\n  const downloadImage = async (imageUrl: string, filename: string) => {\n    try {\n      const response = await fetch(imageUrl);\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = filename;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('下载图片失败:', error);\n    }\n  };\n\n  // 调用API生成图片\n  const callGenerateAPI = async (prompt: string, base64Images: string[]) => {\n    // 构建带风格信息的提示词\n    let finalPrompt = prompt;\n    if (customStyle.trim()) {\n      finalPrompt += `\\n## Style:\\n${customStyle}\\n图片比例【竖屏9:16】`;\n    }\n    \n    // 构建用户内容数组\n    const userContent: any[] = [\n      {\n        type: \"text\",\n        text: finalPrompt\n      }\n    ];\n\n    // 为每张图片添加image_url\n    base64Images.forEach((base64Image) => {\n      userContent.push({\n        type: \"image_url\",\n        image_url: {\n          url: `data:image/jpeg;base64,${base64Image}`\n        }\n      });\n    });\n\n    const requestBody = {\n      model: \"sora_image\",\n      messages: [\n        {\n          role: \"system\",\n          content: modelPrompt\n        },\n        {\n          role: \"user\",\n          content: userContent\n        }\n      ]\n    };\n\n    try {\n      const response = await fetch('https://yunwu.ai/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify(requestBody)\n      });\n\n      if (!response.ok) {\n        throw new Error(`API请求失败: ${response.status} ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('API调用失败:', error);\n      throw error;\n    }\n  };\n\n  // 带重试的API调用函数\n  const callGenerateAPIWithRetry = async (prompt: string, base64Images: string[], maxRetries: number = 3) => {\n    let lastError: any;\n    \n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        console.log(`API调用尝试 ${attempt}/${maxRetries}`);\n        const result = await callGenerateAPI(prompt, base64Images);\n        return result;\n      } catch (error) {\n        lastError = error;\n        console.error(`API调用失败 (尝试 ${attempt}/${maxRetries}):`, error);\n        \n        if (attempt < maxRetries) {\n          // 重试前等待一段时间，使用指数退避\n          const delay = Math.min(1000 * Math.pow(2, attempt - 1), 5000);\n          console.log(`等待 ${delay}ms 后重试...`);\n          await new Promise(resolve => setTimeout(resolve, delay));\n        }\n      }\n    }\n    \n    throw lastError;\n  };\n\n  // 根据prompt过滤需要的图片\n  const filterImagesByPrompt = (promptText: string, fileList: any[], base64Images: string[]) => {\n    const filteredImages: string[] = [];\n    console.log('fileList', fileList);\n    console.log('base64Images', base64Images);\n    console.log('promptText', promptText);\n    fileList.forEach((file, index) => {\n      const fileName = file.name.split('.')[0];\n      // 检查prompt中是否包含图片名称（不区分大小写）\n      if (promptText.toLowerCase().includes(fileName.toLowerCase())) {\n        filteredImages.push(base64Images[index]);\n        console.log(`找到匹配的图片: ${fileName}`);\n      }\n    });\n    \n    console.log(`从 ${fileList.length} 张图片中过滤出 ${filteredImages.length} 张相关图片`);\n    return filteredImages;\n  };\n\n  // 处理单个场景生成\n  const generateSingleScene = async (sceneIndex: number, scene: any, fileList: any[], base64Images: string[]) => {\n    const parsedPrompt = parseScenePrompt(scene);\n    \n    // 构建提示词\n    let promptText = '';\n    if (parsedPrompt && parsedPrompt.subject && parsedPrompt.subject.action) {\n      promptText = parsedPrompt.subject.action;\n    } else {\n      // 如果没有解析到结构化数据，使用原始提示词\n      promptText = scene['分镜提示词'] || scene['提示词'] || scene['内容'] || scene['描述'] || '';\n    }\n\n\n    // 根据prompt过滤需要的图片\n    const filteredImages = filterImagesByPrompt(promptText, fileList, base64Images);\n    console.log('filteredImages', filteredImages);\n\n    try {\n      // 更新进度状态\n      setGenerationProgress(prev => ({\n        ...prev,\n        [sceneIndex]: '生成中...'\n      }));\n      \n      console.log(`开始生成场景${sceneIndex + 1}的图片，使用${filteredImages.length}张相关图片...`);\n      const result = await callGenerateAPIWithRetry(promptText, filteredImages);\n      \n      // 更新进度状态为成功\n      setGenerationProgress(prev => ({\n        ...prev,\n        [sceneIndex]: '生成成功'\n      }));\n      \n      return {\n        sceneIndex,\n        sceneData: scene,\n        result: result,\n        success: true,\n        error: null\n      };\n    } catch (error) {\n      console.error(`场景${sceneIndex + 1}生成失败:`, error);\n      \n      // 更新进度状态为失败\n      setGenerationProgress(prev => ({\n        ...prev,\n        [sceneIndex]: '生成失败'\n      }));\n      \n      return {\n        sceneIndex,\n        sceneData: scene,\n        result: null,\n        success: false,\n        error: error\n      };\n    }\n  };\n\n  // 处理单个场景生成\n  const handleGenerateSingle = async (sceneIndex: number) => {\n    // 验证必要参数\n    if (!apiKey.trim()) {\n      message.error('请先设置API密钥');\n      return;\n    }\n\n    if (fileList.length === 0) {\n      message.error('请先上传参考图片');\n      return;\n    }\n\n    const scene = validShots[sceneIndex];\n    if (!scene) {\n      message.error('场景数据不存在');\n      return;\n    }\n\n    try {\n      // 更新进度状态\n      setGenerationProgress(prev => ({\n        ...prev,\n        [sceneIndex]: '生成中...'\n      }));\n\n      // 将所有上传的图片转换为base64\n      const base64Images = await Promise.all(\n        fileList.map(file => convertImageToBase64(file))\n      );\n\n      // 生成单个场景\n      const result = await generateSingleScene(sceneIndex, scene, fileList, base64Images);\n      \n      // 更新生成的图片状态\n      setGeneratedImages(prev => {\n        const newResults = [...prev];\n        newResults[sceneIndex] = result;\n        return newResults;\n      });\n      \n      if (result.success) {\n        message.success(`场景${sceneIndex + 1}生成成功`);\n        \n        // 自动下载生成的图片\n        const content = result.result?.choices?.[0]?.message?.content || '';\n        const imageUrlMatch = content.match(/!\\[image\\]\\((https?:\\/\\/[^)]+)\\)/);\n        const imageUrl = imageUrlMatch ? imageUrlMatch[1] : '';\n        \n        if (imageUrl) {\n          const filename = `场景${sceneIndex + 1}_${new Date().getTime()}.jpg`;\n          await downloadImage(imageUrl, filename);\n          message.success(`图片已自动下载: ${filename}`);\n        }\n      } else {\n        message.error(`场景${sceneIndex + 1}生成失败: ${result.error instanceof Error ? result.error.message : '未知错误'}`);\n      }\n      \n    } catch (error) {\n      console.error(`场景${sceneIndex + 1}生成失败:`, error);\n      \n      // 更新进度状态为失败\n      setGenerationProgress(prev => ({\n        ...prev,\n        [sceneIndex]: '生成失败'\n      }));\n      \n      const errorResult = {\n        sceneIndex,\n        sceneData: scene,\n        result: null,\n        success: false,\n        error: error\n      };\n      \n      // 更新错误状态\n      setGeneratedImages(prev => {\n        const newResults = [...prev];\n        newResults[sceneIndex] = errorResult;\n        return newResults;\n      });\n      \n      message.error(`场景${sceneIndex + 1}生成失败: ${error instanceof Error ? error.message : '未知错误'}`);\n    }\n  };\n\n  // 处理全部生成\n  const handleGenerateAll = async () => {\n    // 验证必要参数\n    if (!apiKey.trim()) {\n      message.error('请先设置API密钥');\n      return;\n    }\n\n    if (validShots.length === 0) {\n      message.error('请先上传包含场景数据的CSV文件');\n      return;\n    }\n\n    if (fileList.length === 0) {\n      message.error('请先上传参考图片');\n      return;\n    }\n\n    setIsGenerating(true);\n    setGenerationProgress({});\n    // 初始化数组，确保有正确的长度\n    setGeneratedImages(new Array(validShots.length).fill(null));\n\n    try {\n      // 将所有上传的图片转换为base64\n      console.log(`开始转换 ${fileList.length} 张图片为base64...`);\n      const base64Images = await Promise.all(\n        fileList.map(file => convertImageToBase64(file))\n      );\n      console.log(`成功转换 ${base64Images.length} 张图片`);\n\n      console.log(`开始并发生成 ${validShots.length} 个场景的图片...`);\n\n      // 创建所有场景的生成任务，每个任务完成后立即更新UI\n      const generateTasks = validShots.map(async (scene, index) => {\n        try {\n          const result = await generateSingleScene(index, scene, fileList, base64Images);\n          \n          // 立即更新生成的图片状态\n          setGeneratedImages(prev => {\n            const newResults = [...prev];\n            newResults[index] = result;\n            return newResults;\n          });\n          \n          if (result.success) {\n            message.success(`场景${index + 1}生成成功`);\n            \n            // 自动下载生成的图片\n            const content = result.result?.choices?.[0]?.message?.content || '';\n            const imageUrlMatch = content.match(/!\\[image\\]\\((https?:\\/\\/[^)]+)\\)/);\n            const imageUrl = imageUrlMatch ? imageUrlMatch[1] : '';\n            \n            if (imageUrl) {\n              const filename = `场景${index + 1}_${new Date().getTime()}.jpg`;\n              await downloadImage(imageUrl, filename);\n              message.success(`图片已自动下载: ${filename}`);\n            }\n          } else {\n            message.error(`场景${index + 1}生成失败: ${result.error instanceof Error ? result.error.message : '未知错误'}`);\n          }\n          \n          return result;\n        } catch (error) {\n          const errorResult = {\n            sceneIndex: index,\n            sceneData: scene,\n            result: null,\n            success: false,\n            error: error\n          };\n          \n          // 立即更新错误状态\n          setGeneratedImages(prev => {\n            const newResults = [...prev];\n            newResults[index] = errorResult;\n            return newResults;\n          });\n          \n          message.error(`场景${index + 1}生成失败: ${error instanceof Error ? error.message : '未知错误'}`);\n          return errorResult;\n        }\n      });\n\n      // 等待所有任务完成\n      const taskResults = await Promise.allSettled(generateTasks);\n      \n      // 统计最终结果\n      const finalResults = taskResults.map((result, index) => {\n        if (result.status === 'fulfilled') {\n          return result.value;\n        } else {\n          return {\n            sceneIndex: index,\n            sceneData: validShots[index],\n            result: null,\n            success: false,\n            error: result.reason\n          };\n        }\n      });\n\n      const successCount = finalResults.filter(r => r.success).length;\n      const failCount = finalResults.filter(r => !r.success).length;\n      \n      if (successCount > 0) {\n        message.success(`批量生成完成！成功：${successCount}个，失败：${failCount}个`);\n      } else {\n        message.error('所有场景生成失败，请检查API密钥和网络连接');\n      }\n\n    } catch (error) {\n      console.error('批量生成失败:', error);\n      message.error('批量生成失败，请重试');\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  // 处理文件上传\n  const handleFileUpload = async (file: any) => {\n    // 检查是否为CSV文件\n    if (file.name.toLowerCase().endsWith('.csv')) {\n      try {\n        // 读取文件为ArrayBuffer\n        const arrayBuffer = await file.arrayBuffer();\n        const bytes = new Uint8Array(arrayBuffer);\n        \n        console.log('文件字节长度:', bytes.length);\n        \n        // 尝试不同编码\n        let decodedText = '';\n        let encoding = 'UTF-8';\n        \n        // 首先尝试UTF-8\n        try {\n          const utf8Decoder = new TextDecoder('utf-8');\n          decodedText = utf8Decoder.decode(bytes);\n          console.log('UTF-8解码结果:', decodedText.substring(0, 200));\n          \n          // 检查是否有乱码\n          if (decodedText.includes('') || decodedText.includes('')) {\n            throw new Error('UTF-8解码出现乱码');\n          }\n        } catch (error) {\n          console.log('UTF-8解码失败，尝试GBK编码');\n          \n          // 尝试GBK编码\n          try {\n            const gbkDecoder = new TextDecoder('gbk');\n            decodedText = gbkDecoder.decode(bytes);\n            encoding = 'GBK';\n            console.log('GBK解码结果:', decodedText.substring(0, 200));\n          } catch (gbkError) {\n            console.log('GBK解码失败，尝试GB2312编码');\n            \n            // 尝试GB2312编码\n            const gb2312Decoder = new TextDecoder('gb2312');\n            decodedText = gb2312Decoder.decode(bytes);\n            encoding = 'GB2312';\n            console.log('GB2312解码结果:', decodedText.substring(0, 200));\n          }\n        }\n        \n        console.log(`使用${encoding}编码成功，开始解析CSV...`);\n        \n        // 使用PapaParse解析CSV文本\n        Papa.parse(decodedText, {\n          header: true,\n          skipEmptyLines: true,\n          complete: (results: any) => {\n            console.log('PapaParse解析完成:', results);\n            const csvData = results.data;\n            \n            // 显示所有列名，帮助调试\n            if (csvData.length > 0) {\n              const headers = Object.keys(csvData[0]);\n              console.log('CSV列名:', headers);\n            }\n            \n            // 查找包含分镜提示词的行\n            const validShots = csvData.filter((row: any) => {\n              // 尝试不同的列名\n              const shotNumber = row['分镜数'] || row['分镜'] || row['序号'] || row['编号'];\n              const prompt = row['分镜提示词'] || row['提示词'] || row['内容'] || row['描述'];\n              \n              const hasShotNumber = shotNumber && shotNumber.toString().trim();\n              const hasPrompt = prompt && prompt.toString().trim();\n              \n              console.log('检查行:', row, 'hasShotNumber:', hasShotNumber, 'hasPrompt:', hasPrompt);\n              return hasShotNumber && hasPrompt;\n            });\n            \n            console.log('有效的分镜数据:', validShots);\n            \n            if (validShots.length === 0) {\n              message.warning('未找到有效的分镜提示词数据，请检查CSV文件格式');\n              \n              // 显示调试信息\n              const debugInfo = `CSV调试信息:\\n\\n使用编码: ${encoding}\\n\\n原始内容:\\n${decodedText.substring(0, 500)}...\\n\\n解析后的数据:\\n${JSON.stringify(csvData.slice(0, 3), null, 2)}`;\n              setPromptContent(debugInfo);\n              return;\n            }\n            \n            // 存储validShots到状态中\n            setValidShots(validShots);\n            \n            const shotPrompts = validShots\n              .map((row: any) => {\n                const shotNumber = row['分镜数'] || row['分镜'] || row['序号'] || row['编号'] || '';\n                const prompt = row['分镜提示词'] || row['提示词'] || row['内容'] || row['描述'] || '';\n                return `分镜${shotNumber}:\\n${prompt}`;\n              })\n              .join('\\n\\n' + '='.repeat(50) + '\\n\\n');\n            \n            setPromptContent(shotPrompts);\n            message.success(`成功解析CSV文件，提取了${validShots.length}条分镜提示词`);\n          },\n          error: (error: any) => {\n            console.error('PapaParse解析错误:', error);\n            message.error('CSV文件解析失败，请检查文件格式');\n          }\n        });\n      } catch (error) {\n        console.error('文件读取失败:', error);\n        message.error('文件读取失败，请重试');\n      }\n    } else {\n      // JSON文件使用FileReader\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const content = e.target?.result as string;\n        setPromptContent(content);\n        message.success('文件内容已加载到文本区域');\n      };\n      reader.readAsText(file);\n    }\n    \n    return false; // 阻止自动上传\n  };\n\n  // CSV/JSON 文件上传配置\n  const fileUploadProps = {\n    name: 'file',\n    accept: '.csv,.json',\n    beforeUpload: handleFileUpload,\n    showUploadList: false,\n  };\n\n  return (\n    <div className=\"dashboard-page\">\n      <div className=\"page-layout\">\n        {/* 左侧列 */}\n        <div className=\"left-column\">\n          {/* 基本信息配置 */}\n          <Card \n            title={\n              <span>\n                <SettingOutlined style={{ marginRight: 8, color: '#722ed1' }} />\n                基本配置\n              </span>\n            }\n            extra={\n              (apiKey.trim() || apiPlatform || model) ? (\n                <span className=\"auto-save-hint\">✅ 已自动保存</span>\n              ) : null\n            }\n            className=\"basic-config-card\"\n          >\n            <div className=\"config-form\">\n              <div className=\"config-item\">\n                <label className=\"config-label\">API 密钥</label>\n                <Input\n                  value={apiKey}\n                  onChange={handleApiKeyChange}\n                  placeholder=\"请输入API密钥...\"\n                  className=\"config-input\"\n                  autoComplete=\"off\"\n                  autoCorrect=\"off\"\n                  autoCapitalize=\"off\"\n                  spellCheck=\"false\"\n                />\n              </div>\n              \n              <div className=\"config-item\">\n                <label className=\"config-label\">API 平台</label>\n                <Select\n                  value={apiPlatform}\n                  onChange={handleApiPlatformChange}\n                  className=\"config-select\"\n                  options={[\n                    { value: '云雾', label: '云雾' }\n                  ]}\n                />\n              </div>\n              \n              <div className=\"config-item\">\n                <label className=\"config-label\">模型</label>\n                <Select\n                  value={model}\n                  onChange={handleModelChange}\n                  className=\"config-select\"\n                  options={[\n                    { value: 'Sora', label: 'Sora' },\n                    { value: 'Nano Banana', label: 'Nano Banana' },\n                    { value: '即梦4.0', label: '即梦4.0' }\n                  ]}\n                />\n              </div>\n              \n              <div className=\"config-item\">\n                <label className=\"config-label\">基础Prompt</label>\n                <TextArea\n                  style={{ height: 160 }}\n                  value={modelPrompt}\n                  onChange={handleModelPromptChange}\n                  placeholder=\"请输入模型基础Prompt...\"\n                  rows={4}\n                  className=\"config-textarea\"\n                />\n              </div>\n            </div>\n          </Card>\n\n          {/* 自定义风格配置 */}\n          <Card \n            title={\n              <span>\n                <BulbOutlined style={{ marginRight: 8, color: '#722ed1' }} />\n                自定义风格\n              </span>\n            }\n            extra={null}\n            className=\"custom-style-card\"\n          >\n            <TextArea\n              style={{ height: 180 }}\n              value={customStyle}\n              onChange={handleCustomStyleChange}\n              placeholder=\"请输入自定义风格描述，例如：动漫风格、写实风格、油画风格等...\"\n              rows={4}\n              className=\"custom-style-textarea\"\n            />\n          </Card>\n\n        </div>\n\n        {/* 右侧列 - 参考图上传和场景管理 */}\n        <div className=\"right-column\">\n          {/* 参考图上传 */}\n          <Card \n            title={\n              <span>\n                <CloudUploadOutlined style={{ marginRight: 8, color: '#722ed1' }} />\n                参考图上传\n              </span>\n            }\n            className=\"upload-card\"\n          >\n            <Upload.Dragger {...uploadProps} className=\"upload-dragger\">\n              <p className=\"ant-upload-drag-icon\">\n                <CloudUploadOutlined style={{ fontSize: 48, color: '#722ed1' }} />\n              </p>\n              <p className=\"ant-upload-text\">拖拽图片到此处,或点击选择</p>\n              <p className=\"ant-upload-hint\">\n                支持 JPG、PNG、GIF 格式，单个文件不超过 10MB\n              </p>\n            </Upload.Dragger>\n            <div className=\"upload-info\">\n              {fileList.length}/20 images\n            </div>\n            \n            {/* 图片预览区域 */}\n            {fileList.length > 0 && (\n              <div className=\"image-preview-section\">\n                <div className=\"preview-title\">已上传图片</div>\n                <div className=\"image-grid\">\n                  {fileList.map((file) => (\n                    <div key={file.uid} className=\"image-item\">\n                      <Image\n                        src={file.thumbUrl || URL.createObjectURL(file.originFileObj)}\n                        alt={file.name}\n                        className=\"preview-image\"\n                        preview={{\n                          mask: <div className=\"preview-mask\">预览</div>\n                        }}\n                      />\n                      <Button\n                        type=\"text\"\n                        danger\n                        icon={<DeleteOutlined />}\n                        className=\"delete-btn\"\n                        onClick={() => handleRemoveImage(file.uid)}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </Card>\n          {/* 场景管理 */}\n          <Card \n            title={\n              <span>\n                <GlobalOutlined style={{ marginRight: 8, color: '#722ed1' }} />\n                场景管理\n              </span>\n            }\n            extra={\n              <Space>\n                <Upload {...fileUploadProps}>\n                  <Button \n                    type=\"default\" \n                    icon={<UploadOutlined />}\n                  >\n                    JSON/CSV\n                  </Button>\n                </Upload>\n                <Button \n                  type=\"primary\" \n                  icon={<PlayCircleOutlined />}\n                  onClick={handleGenerateAll}\n                  loading={isGenerating}\n                  disabled={isGenerating || validShots.length === 0 || fileList.length === 0 || !apiKey.trim()}\n                >\n                  {isGenerating ? '生成中...' : '全部生成'}\n                </Button>\n              </Space>\n            }\n            className=\"scene-management-card\"\n          >\n            <div className=\"scene-content-layout\">\n              {validShots.length > 0 ? (\n                <div className=\"scenes-list\">\n                  {validShots.map((scene, index) => {\n                    const parsedPrompt = parseScenePrompt(scene);\n                    const shotNumber = scene['分镜数'] || scene['分镜'] || scene['序号'] || scene['编号'] || (index + 1);\n                    \n                    return (\n                      <div key={index} className=\"scene-item\">\n                        {/* 场景标题 */}\n                        <div className=\"scene-header\">\n                          <div className=\"scene-title\">场景 {shotNumber}</div>\n                          <div className=\"scene-actions\">\n                            {editingScene === index ? (\n                              <div className=\"edit-buttons\">\n                                <Button size=\"small\" onClick={saveEditing} type=\"primary\">保存</Button>\n                                <Button size=\"small\" onClick={cancelEditing}>取消</Button>\n                              </div>\n                            ) : (\n                              <div className=\"action-buttons\">\n                                <Button size=\"small\" onClick={() => startEditing(index)}>编辑</Button>\n                                <Button \n                                  type=\"primary\" \n                                  icon={<PlayCircleOutlined />} \n                                  size=\"small\"\n                                  onClick={() => handleGenerateSingle(index)}\n                                  loading={generationProgress[index] === '生成中...'}\n                                  disabled={!apiKey.trim() || fileList.length === 0}\n                                >\n                                  单个生成\n                                </Button>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n\n                        {/* 左右两栏布局 */}\n                        <div className=\"scene-content\">\n                          {/* 左栏：Image Prompt */}\n                          <div className=\"scene-left-panel\">\n                            <div className=\"panel-content\">\n                              <div className=\"panel-title\">\n                                <span>Image Prompt</span>\n                              </div>\n                              {editingScene === index ? (\n                                <div className=\"image-prompt-section\">\n                                  {/* 编辑模式 */}\n                                  <div className=\"prompt-section\">\n                                    <div className=\"field-item\">\n                                      <TextArea\n                                       style={{ height: 360 }}\n                                       value={editingContent.subject?.action || ''}\n                                       onChange={(e) => updateSubjectContent('action', e.target.value)}\n                                       placeholder=\"输入内容\"\n                                      />\n                                    </div>\n                                  </div> \n                                </div>\n                              ) : (\n                                <div className=\"image-prompt-section\">\n                                  {/* 显示模式 */}\n                                  {parsedPrompt ? (\n                                    <>\n                                      {/* 主体部分 */}\n                                      {parsedPrompt.subject && (\n                                        <div className=\"prompt-section\">\n                                          {parsedPrompt.subject.action && (\n                                            <div className=\"field-item\">\n                                              <div className=\"field-value action-text\">{parsedPrompt.subject.action}</div>\n                                            </div>\n                                          )}\n                                        </div>\n                                      )}               \n                                    </>\n                                  ) : (\n                                    <div className=\"no-scene-message\">暂无场景数据</div>\n                                  )}\n                                </div>\n                              )}\n                            </div>\n                          </div>\n\n                          {/* 右栏：生成的图片 */}\n                          <div className=\"scene-right-panel\">\n                            <div className=\"panel-content\">\n                              <div className=\"panel-title\">\n                                <span>生成的图片</span>\n                              </div>\n                              {(() => {\n                                // 安全地获取生成结果，避免undefined错误\n                                const generatedResult = generatedImages[index];\n                                \n                                if (generatedResult && generatedResult.success) {\n                                  // 从API返回的content中提取图片URL\n                                  const content = generatedResult.result?.choices?.[0]?.message?.content || '';\n                                  const imageUrlMatch = content.match(/!\\[image\\]\\((https?:\\/\\/[^)]+)\\)/);\n                                  const imageUrl = imageUrlMatch ? imageUrlMatch[1] : '';\n                                  \n                                  if (imageUrl) {\n                                    // 显示生成的图片\n                                    return (\n                                      <div className=\"generated-image\">\n                                        <Image\n                                          src={imageUrl}\n                                          alt={`场景${index + 1}生成的图片`}\n                                          className=\"result-image\"\n                                          preview={{\n                                            mask: <div className=\"preview-mask\">预览</div>\n                                          }}\n                                        />\n                                      </div>\n                                    );\n                                  } else {\n                                    // 如果无法提取图片URL，显示原始内容\n                                    return (\n                                      <div className=\"generated-image\">\n                                        <div className=\"content-display\">\n                                          <div className=\"content-text\">{content}</div>\n                                        </div>\n                                      </div>\n                                    );\n                                  }\n                                } else if (generatedResult && !generatedResult.success) {\n                                  // 显示错误状态\n                                  return (\n                                    <div className=\"image-placeholder error\">\n                                      <div className=\"image-number\">{index + 1}</div>\n                                      <div className=\"error-text\">生成失败</div>\n                                    </div>\n                                  );\n                                } else if (isGenerating) {\n                                  // 显示生成中状态，显示具体进度\n                                  const progress = generationProgress[index] || '等待中...';\n                                  return (\n                                    <div className=\"image-placeholder generating\">\n                                      <div className=\"image-number\">{index + 1}</div>\n                                      <div className=\"generating-text\">{progress}</div>\n                                    </div>\n                                  );\n                                } else {\n                                  // 显示等待状态\n                                  return (\n                                    <div className=\"image-placeholder\">\n                                      <div className=\"image-number\">{index + 1}</div>\n                                      <div className=\"waiting-text\">Waiting...</div>\n                                    </div>\n                                  );\n                                }\n                              })()}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div className=\"scene-empty-state\">\n                  <div className=\"empty-icon\">\n                    <GlobalOutlined />\n                  </div>\n                  <div className=\"empty-title\">暂无场景数据</div>\n                  <div className=\"empty-description\">\n                    请上传包含场景信息的JSON或CSV文件\n                  </div>\n                </div>\n              )}\n            </div>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n\n",
      "__isJSFile": true,
      "__absFile": "/Users/didi/Desktop/yunwu-gen-image/src/pages/Dashboard/index.tsx"
    },
    "4": {
      "path": "/users",
      "name": "用户管理",
      "icon": "UserOutlined",
      "file": "@/pages/Users/index.tsx",
      "parentId": "1",
      "id": "4",
      "absPath": "/users",
      "__content": "import React, { useState } from 'react';\nimport {\n  Card,\n  Table,\n  Button,\n  Space,\n  Tag,\n  Modal,\n  Form,\n  Input,\n  Select,\n  message,\n} from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport type { ColumnType } from 'antd/es/table';\nimport './index.less';\n\ninterface UserType {\n  key: string;\n  id: string;\n  name: string;\n  email: string;\n  role: string;\n  status: string;\n  createTime: string;\n}\n\nconst Users: React.FC = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [modalTitle, setModalTitle] = useState('新增用户');\n  const [form] = Form.useForm();\n\n  const columns: ColumnType<UserType>[] = [\n    {\n      title: '用户ID',\n      dataIndex: 'id',\n      key: 'id',\n      width: 120,\n    },\n    {\n      title: '用户名',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: '邮箱',\n      dataIndex: 'email',\n      key: 'email',\n    },\n    {\n      title: '角色',\n      dataIndex: 'role',\n      key: 'role',\n      render: (role: string) => {\n        const roleMap: Record<string, { text: string; color: string }> = {\n          admin: { text: '管理员', color: 'red' },\n          user: { text: '普通用户', color: 'blue' },\n          vip: { text: 'VIP用户', color: 'gold' },\n        };\n        const roleInfo = roleMap[role] || { text: role, color: 'default' };\n        return <Tag color={roleInfo.color}>{roleInfo.text}</Tag>;\n      },\n    },\n    {\n      title: '状态',\n      dataIndex: 'status',\n      key: 'status',\n      render: (status: string) => {\n        const statusMap: Record<string, { text: string; color: string }> = {\n          active: { text: '正常', color: 'success' },\n          inactive: { text: '禁用', color: 'error' },\n        };\n        const statusInfo = statusMap[status] || { text: status, color: 'default' };\n        return <Tag color={statusInfo.color}>{statusInfo.text}</Tag>;\n      },\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'createTime',\n      key: 'createTime',\n    },\n    {\n      title: '操作',\n      key: 'action',\n      fixed: 'right',\n      width: 150,\n      render: (_: any, record: UserType) => (\n        <Space size=\"small\">\n          <Button\n            type=\"link\"\n            size=\"small\"\n            icon={<EditOutlined />}\n            onClick={() => handleEdit(record)}\n          >\n            编辑\n          </Button>\n          <Button\n            type=\"link\"\n            size=\"small\"\n            danger\n            icon={<DeleteOutlined />}\n            onClick={() => handleDelete(record)}\n          >\n            删除\n          </Button>\n        </Space>\n      ),\n    },\n  ];\n\n  const dataSource: UserType[] = [\n    {\n      key: '1',\n      id: 'U001',\n      name: '张三',\n      email: 'zhangsan@example.com',\n      role: 'admin',\n      status: 'active',\n      createTime: '2024-01-15 10:30',\n    },\n    {\n      key: '2',\n      id: 'U002',\n      name: '李四',\n      email: 'lisi@example.com',\n      role: 'user',\n      status: 'active',\n      createTime: '2024-02-20 14:20',\n    },\n    {\n      key: '3',\n      id: 'U003',\n      name: '王五',\n      email: 'wangwu@example.com',\n      role: 'vip',\n      status: 'active',\n      createTime: '2024-03-10 09:15',\n    },\n    {\n      key: '4',\n      id: 'U004',\n      name: '赵六',\n      email: 'zhaoliu@example.com',\n      role: 'user',\n      status: 'inactive',\n      createTime: '2024-04-05 16:45',\n    },\n  ];\n\n  const handleAdd = () => {\n    setModalTitle('新增用户');\n    form.resetFields();\n    setIsModalVisible(true);\n  };\n\n  const handleEdit = (record: UserType) => {\n    setModalTitle('编辑用户');\n    form.setFieldsValue(record);\n    setIsModalVisible(true);\n  };\n\n  const handleDelete = (record: UserType) => {\n    Modal.confirm({\n      title: '确认删除',\n      content: `确定要删除用户 \"${record.name}\" 吗？`,\n      okText: '确认',\n      cancelText: '取消',\n      onOk: () => {\n        message.success('删除成功');\n      },\n    });\n  };\n\n  const handleModalOk = () => {\n    form.validateFields().then((values) => {\n      console.log('表单值:', values);\n      message.success(modalTitle === '新增用户' ? '添加成功' : '更新成功');\n      setIsModalVisible(false);\n      form.resetFields();\n    });\n  };\n\n  const handleModalCancel = () => {\n    setIsModalVisible(false);\n    form.resetFields();\n  };\n\n  return (\n    <div className=\"users-page\">\n      <Card\n        title=\"用户管理\"\n        extra={\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleAdd}>\n            新增用户\n          </Button>\n        }\n      >\n        <Table\n          columns={columns}\n          dataSource={dataSource}\n          pagination={{\n            total: dataSource.length,\n            pageSize: 10,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total) => `共 ${total} 条`,\n          }}\n        />\n      </Card>\n\n      <Modal\n        title={modalTitle}\n        open={isModalVisible}\n        onOk={handleModalOk}\n        onCancel={handleModalCancel}\n        okText=\"确认\"\n        cancelText=\"取消\"\n      >\n        <Form form={form} layout=\"vertical\">\n          <Form.Item\n            name=\"name\"\n            label=\"用户名\"\n            rules={[{ required: true, message: '请输入用户名' }]}\n          >\n            <Input placeholder=\"请输入用户名\" />\n          </Form.Item>\n          <Form.Item\n            name=\"email\"\n            label=\"邮箱\"\n            rules={[\n              { required: true, message: '请输入邮箱' },\n              { type: 'email', message: '请输入正确的邮箱格式' },\n            ]}\n          >\n            <Input placeholder=\"请输入邮箱\" />\n          </Form.Item>\n          <Form.Item\n            name=\"role\"\n            label=\"角色\"\n            rules={[{ required: true, message: '请选择角色' }]}\n          >\n            <Select placeholder=\"请选择角色\">\n              <Select.Option value=\"admin\">管理员</Select.Option>\n              <Select.Option value=\"user\">普通用户</Select.Option>\n              <Select.Option value=\"vip\">VIP用户</Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            name=\"status\"\n            label=\"状态\"\n            rules={[{ required: true, message: '请选择状态' }]}\n          >\n            <Select placeholder=\"请选择状态\">\n              <Select.Option value=\"active\">正常</Select.Option>\n              <Select.Option value=\"inactive\">禁用</Select.Option>\n            </Select>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Users;\n\n\n",
      "__isJSFile": true,
      "__absFile": "/Users/didi/Desktop/yunwu-gen-image/src/pages/Users/index.tsx"
    },
    "5": {
      "path": "/settings",
      "name": "系统设置",
      "icon": "SettingOutlined",
      "file": "@/pages/Settings/index.tsx",
      "parentId": "1",
      "id": "5",
      "absPath": "/settings",
      "__content": "import React from 'react';\nimport { Card, Form, Input, Button, Switch, Select, message, Divider } from 'antd';\nimport './index.less';\n\nconst Settings: React.FC = () => {\n  const [form] = Form.useForm();\n\n  const onFinish = (values: any) => {\n    console.log('表单值:', values);\n    message.success('保存成功');\n  };\n\n  return (\n    <div className=\"settings-page\">\n      <Card title=\"系统设置\">\n        <Form\n          form={form}\n          layout=\"vertical\"\n          onFinish={onFinish}\n          initialValues={{\n            siteName: '云雾后台管理系统',\n            siteDescription: '一个基于Umi和Ant Design的后台管理系统',\n            enableRegister: true,\n            enableEmail: false,\n            pageSize: '10',\n            language: 'zh-CN',\n          }}\n        >\n          <Divider orientation=\"left\">基本设置</Divider>\n          \n          <Form.Item\n            name=\"siteName\"\n            label=\"站点名称\"\n            rules={[{ required: true, message: '请输入站点名称' }]}\n          >\n            <Input placeholder=\"请输入站点名称\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"siteDescription\"\n            label=\"站点描述\"\n            rules={[{ required: true, message: '请输入站点描述' }]}\n          >\n            <Input.TextArea\n              rows={4}\n              placeholder=\"请输入站点描述\"\n              showCount\n              maxLength={200}\n            />\n          </Form.Item>\n\n          <Form.Item name=\"language\" label=\"默认语言\">\n            <Select>\n              <Select.Option value=\"zh-CN\">简体中文</Select.Option>\n              <Select.Option value=\"en-US\">English</Select.Option>\n              <Select.Option value=\"ja-JP\">日本語</Select.Option>\n            </Select>\n          </Form.Item>\n\n          <Divider orientation=\"left\">功能设置</Divider>\n\n          <Form.Item\n            name=\"enableRegister\"\n            label=\"开启用户注册\"\n            valuePropName=\"checked\"\n          >\n            <Switch />\n          </Form.Item>\n\n          <Form.Item\n            name=\"enableEmail\"\n            label=\"开启邮件通知\"\n            valuePropName=\"checked\"\n          >\n            <Switch />\n          </Form.Item>\n\n          <Form.Item name=\"pageSize\" label=\"每页显示数量\">\n            <Select>\n              <Select.Option value=\"10\">10条/页</Select.Option>\n              <Select.Option value=\"20\">20条/页</Select.Option>\n              <Select.Option value=\"50\">50条/页</Select.Option>\n              <Select.Option value=\"100\">100条/页</Select.Option>\n            </Select>\n          </Form.Item>\n\n          <Divider orientation=\"left\">安全设置</Divider>\n\n          <Form.Item\n            name=\"maxLoginAttempts\"\n            label=\"最大登录尝试次数\"\n            rules={[{ required: true, message: '请输入最大登录尝试次数' }]}\n            initialValue={5}\n          >\n            <Input type=\"number\" min={1} max={10} />\n          </Form.Item>\n\n          <Form.Item\n            name=\"sessionTimeout\"\n            label=\"会话超时时间（分钟）\"\n            rules={[{ required: true, message: '请输入会话超时时间' }]}\n            initialValue={30}\n          >\n            <Input type=\"number\" min={5} max={1440} />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n              保存设置\n            </Button>\n            <Button\n              style={{ marginLeft: 16 }}\n              onClick={() => form.resetFields()}\n              size=\"large\"\n            >\n              重置\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    </div>\n  );\n};\n\nexport default Settings;\n\n\n",
      "__isJSFile": true,
      "__absFile": "/Users/didi/Desktop/yunwu-gen-image/src/pages/Settings/index.tsx"
    }
  },
  "apiRoutes": {},
  "hasSrcDir": true,
  "npmClient": "npm",
  "umi": {
    "version": "4.5.3",
    "name": "Umi",
    "importSource": "umi",
    "cliName": "umi"
  },
  "bundleStatus": {
    "done": false
  },
  "mfsuBundleStatus": {
    "done": false
  },
  "react": {
    "version": "18.3.1",
    "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/react"
  },
  "react-dom": {
    "version": "18.3.1",
    "path": "/Users/didi/Desktop/yunwu-gen-image/node_modules/react-dom"
  },
  "appJS": null,
  "locale": "zh-CN",
  "globalCSS": [
    "/Users/didi/Desktop/yunwu-gen-image/src/global.less"
  ],
  "globalJS": [],
  "overridesCSS": [],
  "bundler": "webpack",
  "git": {
    "originUrl": "https://github.com/Kong-XD/yunwu-gen-image.git"
  },
  "framework": "react",
  "typescript": {
    "tsVersion": "5.9.3",
    "tslibVersion": "2.8.1"
  },
  "faviconFiles": [],
  "port": 8000,
  "host": "0.0.0.0",
  "ip": "172.24.192.215",
  "antd": {
    "pkgPath": "/Users/didi/Desktop/yunwu-gen-image/node_modules/antd",
    "version": "4.24.16"
  }
}
